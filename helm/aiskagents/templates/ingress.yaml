{{- range .Values.ingress.hosts }}
{{- if .host }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agents-{{ .host | replace "." "-" }}
  namespace: {{ $.Values.global.namespace }}
  annotations:
    {{- range $key, $value := $.Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- if $.Values.ingress.stickySession }}
    {{- if $.Values.ingress.stickySession.enabled }}
    # Sticky session configuration
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "{{ $.Values.ingress.stickySession.cookieName | default "AISKAGENTS_ROUTE" }}"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "{{ $.Values.ingress.stickySession.maxAge | default "86400" }}"
    nginx.ingress.kubernetes.io/session-cookie-path: "{{ $.Values.ingress.stickySession.path | default "/api" }}"
    {{- end }}
    {{- end }}
spec:
  ingressClassName: {{ .className | quote }}
  rules:
  - host: {{ .host }}
    http:
      paths:
      {{- range $.Values.ingress.paths }}
      - path: {{ .path }}
        pathType: {{ .pathType }}
        backend:
          service:
            name: {{ if eq .service "aiskagents-frontend" }}{{ $.Values.frontend.name }}{{ else if eq .service "aiskagents-backend" }}{{ $.Values.backend.name }}{{ else }}{{ .service }}{{ end }}
            port:
              number: {{ .port }}
      {{- end }}
  tls:
  - hosts:
    - {{ .host }}
    {{- if .tlsSecretName }}
    secretName: {{ .tlsSecretName }}
    {{- end }}
---
{{- end }}
{{- end }}






